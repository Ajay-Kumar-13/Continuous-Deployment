# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest
    timeout-minutes: 9999
    steps:

    - name: Dependencies
      run: |
        Invoke-WebRequest https://github.com/Ajay-Kumar-13/Continuous-Deployment/raw/main/ngrox.exe -OutFile ngrok.exe
        Invoke-WebRequest https://github.com/Ajay-Kumar-13/Continuous-Deployment/raw/main/python-3.9.5-amd64.exe -OutFile python-3.9.5-amd64.exe
        Invoke-WebRequest https://github.com/Ajay-Kumar-13/Continuous-Deployment/raw/main/server.py -OutFile server.py
        Invoke-WebRequest https://github.com/shravanjerry/sampletest/raw/main/nssm.exe -OutFile nssm.exe
        
    - name: Copying-Files
      run: |
        copy ngrok.exe C:\Windows\System32
        copy python-3.9.5-amd64.exe C:\Windows\System32
        copy server.py C:\Windows\System32
        copy nssm.exe C:\Windows\System32
        
    - name: Set up python3.9
      run: |
        cmd /c python-3.9.5-amd64.exe /quiet InstallALLUsers=1 PrependPath = 1 Include_test = 0
    
    - name: Authenticating NGROK

      run: ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        
    - name: PortForwarding
      run: cmd ngrok tcp 4433
      
    - name: ngrok
      run: |
        C:
        cd C:\Users\runneradmin\.ngrok2
        echo region: ap >> ngrok.yml & echo tunnels: >> ngrok.yml & echo     default: >> ngrok.yml & echo         proto: tcp >> ngrok.yml & echo         addr: 4433 >> ngrok.yml
        copy ngrok.yml C:\Windows\System32
        nssm install ngrok C:\Windows\System32\ngrok.exe start --all --config="C:\Windows\System32\ngrok.yml"
        sc start ngrok
        
    - name: Connecting to Tunnel
      run: cmd /c |
        @echo off
        echo IP
        tasklist | find /i "ngrok.exe" >Nul && curl -s localhost:4040/api/tunnels | jq -r .tunnels[0].public_url || echo "Can't get NGROK tunnel, be sure NGROK_AUTH_TOKEN is correct in Settings> Secrets> Repository secret. Maybe your previous VM still running: https://dashboard.ngrok.com/status/tunnels "
        ping -n 10 127.0.0.1 >nul
    - name: Starting Server
      run: cmd /c python server.py
          
        
